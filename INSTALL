How to build
------------

AutoUPnP uses a simple Makefile for the build procedure. In order
to build the library, call:
$ make

The following environment variables are respected by the Makefile:

* CC (the compiler executable)
* CFLAGS (the compiler flags used for compiling)
* LDFLAGS (the compiler flags used for linking)


Dependencies
------------

The only obligatory requirement is a POSIX-compatible standard C library
implementation (or at least one providing POSIX sockets, dl*() family
of functions, syslog(), snprintf() [C99] and pthread functions).

If the C library doesn't come with pthread support nor even mutex/rwlock
function stubs, AutoUPnP can use libpthread-stubs instead (from xorg).

If available, AutoUPnP will use IPPROTO_* constants and GNU RTLD_NEXT
dlsym() extension.

Additionally, AutoUPnP can use libnotify if it's available via
pkg-config. If you want to disable it, you need to override the
WANT_LIBNOTIFY macro:
$ make WANT_LIBNOTIFY=false


How to install
--------------

Simply copy (or move) the 'autoupnp.so' library into a libdir of your
choice. If you like, you may copy 'autoupnp' wrapper script to a bindir
too.

If you're installing AutoUPnP system-wide, you may want to 'clean'
the wrapper script up of guessing functions and hardcode the library
path. To do so, call:
$ autoupnp cleanup <library-path> <output-filename>

For example:
$ ./autoupnp cleanup /usr/lib64/autoupnp.so /usr/bin/autoupnp
$ chmod +x /usr/bin/autoupnp

Please notice though you should not pass the actual script filename as
the output filename as it doesn't use any temporary files.


How to enable
-------------

After installing AutoUPnP, you'd probably like to enable it for one or
more users. To do so, call:
$ autoupnp install

The wrapper script will look for known shell startup scripts in your
homedir and install itself in them. You might need to create them
beforehand, e.g.:
$ touch ~/.profile ~/.bash_profile
